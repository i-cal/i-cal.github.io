/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/autosave.js":
/*!************************!*\
  !*** ./js/autosave.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setAutosave\": () => (/* binding */ setAutosave),\n/* harmony export */   \"stopAutosave\": () => (/* binding */ stopAutosave)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./js/index.js\");\n\r\n\r\nvar autosaveTimer\r\n\r\nfunction setAutosave() {\r\n    autosaveTimer = setInterval(() => {\r\n        ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)(true);\r\n    }, _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveInterval);\r\n}\r\n\r\nfunction stopAutosave() {\r\n    clearInterval(autosaveTimer)\r\n}\n\n//# sourceURL=webpack://i-cal.github.io/./js/autosave.js?");

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"constants\": () => (/* binding */ constants),\n/* harmony export */   \"currentPage\": () => (/* binding */ currentPage),\n/* harmony export */   \"save\": () => (/* binding */ save),\n/* harmony export */   \"saveGameData\": () => (/* binding */ saveGameData),\n/* harmony export */   \"setCookie\": () => (/* binding */ setCookie),\n/* harmony export */   \"updateCurrencyText\": () => (/* binding */ updateCurrencyText),\n/* harmony export */   \"updateFirstClickDoublerTexts\": () => (/* binding */ updateFirstClickDoublerTexts),\n/* harmony export */   \"updatetier1UnitGenTexts\": () => (/* binding */ updatetier1UnitGenTexts)\n/* harmony export */ });\n/* harmony import */ var _tick_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tick.js */ \"./js/tick.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.js */ \"./js/settings.js\");\n/* harmony import */ var _autosave_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./autosave.js */ \"./js/autosave.js\");\n// Imports\r\n\r\n\r\n\r\n\r\n\r\n// Exports\r\nconst constants = {\r\n    UNITS_ABBR: \"u\",\r\n    MIN_AUTOSAVE_INTERVAL: 1000,\r\n    MAX_AUTOSAVE_INTERVAL: 30000,\r\n    DEF_AUTOSAVE_INTERVAL: 15000,\r\n    OP_PLS_NERF: 0.75,\r\n    SAVEFILE_VERSION: 14,\r\n\r\n    HOME: \"home\",\r\n    SHOP: \"shop\",\r\n    SETTINGS: \"settings\",\r\n\r\n    MAX_FIRST_CLICK_DOUBLER: 10,\r\n    MAX_TIER_1_UNIT_GENS: 10,\r\n    COMMAS_NUMBER_FORMAT: \"commas\",\r\n    PERIOD_NUMBER_FORMAT: \"periods\",\r\n    SCIENTIFIC_NUMBER_FORMAT: \"scientific\"\r\n}\r\n\r\nvar save;\r\nvar currentPage;\r\n\r\n// Variables\r\nvar pageSwitchLocked = false;\r\n\r\ncurrentPage = constants.HOME;\r\n\r\nvar homeLink = $(\"#homeLink\");\r\nvar shopLink = $(\"#shopLink\");\r\nvar settingsLink = $(\"#settingsLink\");\r\n\r\nvar homeDiv = $(\"#mainDiv\");\r\nvar shopDiv = $(\"#shopDiv\");\r\nvar settingsDiv = $(\"#settingsDiv\");\r\n\r\nvar navUnitsText = $(\"#navUnitsText\");\r\n\r\nvar starterSave = {\r\n    currencies: {\r\n        units: 0,\r\n    },\r\n    generation: {\r\n        clickPower: 1,\r\n        firstClickDoublers: 0,\r\n        unitsPerSecond: 0,\r\n        baseProdMult: 1,\r\n        tier1UnitGenerators: 0,\r\n        tier1UnitGeneratorPower: 0,\r\n        tier2UnitGenerators: 0,\r\n        tier3UnitGenerators: 0\r\n    },\r\n    lastOpenPage: constants.HOME,\r\n    lastSaved: new Date(),\r\n    settings: {\r\n        darkModeEnabled: true,\r\n        numberFormat: constants.COMMAS_NUMBER_FORMAT,\r\n        autoSaveEnabled: true,\r\n        autoSaveInterval: constants.DEF_AUTOSAVE_INTERVAL,\r\n        tickRate: 50,\r\n        customTickRateAllowed: false,\r\n        OPEnabled: false,\r\n        consoleLogsEnabled: false\r\n    },\r\n    version: constants.SAVEFILE_VERSION\r\n};\r\n\r\n/* Outer shop code */\r\nvar doDevPrices = false;\r\nvar devPriceScale = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9\r\n}\r\n\r\n// First Click Doubler Variables and Functions\r\nvar buyClickUpgradeButton = $(\"#buyClickUpgradeButton\");\r\nvar firstClickDoublerFlavorText = $(\"#clickUpgradeIncreaseFlavorText\");\r\nvar firstClickDoublersCountText = $(\"#firstClickDoublersCount\");\r\nvar firstClickDoublerPrices = {\r\n    0: 450,\r\n    1: 1800,\r\n    2: 5400,\r\n    3: 14400,\r\n    4: 36000,\r\n    5: 86400,\r\n    6: 201600,\r\n    7: 460800,\r\n    8: 1036800,\r\n    9: 2304000\r\n}\r\n\r\nvar currentFirstClickDoublerPrice;\r\n\r\nvar firstClickDoublerAnimLock = false;\r\nvar firstClickDoublerFlavorAnimation;\r\n\r\nfunction updateCurrencyText() {\r\n    navUnitsText.text(`${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(Math.floor(save.currencies.units))}${constants.UNITS_ABBR}${(save.generation.unitsPerSecond > 0 ? `+(${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.unitsPerSecond)}u/s)` : \"\")}+(${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.clickPower)}u/c)`);\r\n}\r\n\r\nfunction updateFirstClickDoublerTexts() {\r\n    if (save.generation.firstClickDoublers < constants.MAX_FIRST_CLICK_DOUBLER) {\r\n        buyClickUpgradeButton.prop(\"disabled\", !(save.currencies.units >= currentFirstClickDoublerPrice));\r\n        buyClickUpgradeButton.text(`Buy (${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(currentFirstClickDoublerPrice)}u)`);\r\n    } else {\r\n        buyClickUpgradeButton.prop(\"disabled\", true);\r\n        buyClickUpgradeButton.text(`Maxed!`);\r\n    }\r\n\r\n    firstClickDoublersCountText.text(`${save.generation.firstClickDoublers}/${constants.MAX_FIRST_CLICK_DOUBLER}`);\r\n}\r\n\r\nfunction updateFirstClickDoublerPrice() {\r\n    if (doDevPrices) {\r\n        currentFirstClickDoublerPrice = devPriceScale[save.generation.firstClickDoublers];\r\n    } else {\r\n        currentFirstClickDoublerPrice = firstClickDoublerPrices[save.generation.firstClickDoublers];\r\n    }\r\n}\r\n\r\n// Tier 1 Unit Generator variables and functions\r\nvar buytier1UnitGenButton = $(\"#buyTier1UnitGenButton\");\r\nvar tier1UnitGenCountText = $(\"#tier1UnitGenCountText\");\r\nvar tier1UnitGenDescriptionText = $(\"#tier1UnitGenDescriptionText\");\r\nvar tier1UnitGenIncreaseFlavorText = $(\"#tier1UnitGenIncreaseFlavorText\");\r\n\r\nvar tier1UnitGenPrices = {\r\n    0: 57600,\r\n    1: 175200,\r\n    2: 352800,\r\n    3: 710400,\r\n    4: 1488000,\r\n    5: 3225600,\r\n    6: 7123200,\r\n    7: 15820800,\r\n    8: 35078400,\r\n    9: 77376000\r\n}\r\n\r\nvar currentTier1UnitGenPrice;\r\n\r\nvar tier1UnitGenAnimLock = false;\r\nvar tier1UnitGenFlavorAnimation;\r\n\r\nfunction updatetier1UnitGenTexts() {\r\n    if (save.generation.tier1UnitGenerators < constants.MAX_TIER_1_UNIT_GENS) {\r\n        buytier1UnitGenButton.prop(\"disabled\", !(save.currencies.units >= currentTier1UnitGenPrice));\r\n        buytier1UnitGenButton.text(`Buy (${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(currentTier1UnitGenPrice)}u)`);\r\n        tier1UnitGenDescriptionText.text(`Increases idle production to ${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.tier1UnitGeneratorPower == 0 ? 1000 : save.generation.tier1UnitGeneratorPower * 2)}u/s`);\r\n    } else {\r\n        buytier1UnitGenButton.prop(\"disabled\", true);\r\n        buytier1UnitGenButton.text(`Maxed!`);\r\n        tier1UnitGenDescriptionText.text(`Tier 1 idle production is maxed at ${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.tier1UnitGeneratorPower)}u/s.`);\r\n    }\r\n\r\n    tier1UnitGenCountText.text(`${save.generation.tier1UnitGenerators}/${constants.MAX_TIER_1_UNIT_GENS}`);\r\n}\r\n\r\nfunction updatetier1UnitGenPrice() {\r\n    if (doDevPrices) {\r\n        currentTier1UnitGenPrice = devPriceScale[save.generation.tier1UnitGenerators];\r\n    } else {\r\n        currentTier1UnitGenPrice = tier1UnitGenPrices[save.generation.tier1UnitGenerators];\r\n    }\r\n}\r\n\r\nfunction saveGameData(isAutoSave) {\r\n    if (isAutoSave === true) {\r\n        (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)(\"Autosaving...\");\r\n    }\r\n\r\n    save.lastSaved = new Date();\r\n    save.lastOpenPage = currentPage;\r\n    save.version = constants.SAVEFILE_VERSION;\r\n\r\n    save.currencies.units = Math.floor(save.currencies.units);\r\n\r\n    setCookie(\"save\", JSON.stringify(save), 365 * 5);\r\n\r\n    (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)(\"Save finished. Data:\");\r\n    (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)(save);\r\n}\r\n\r\nfunction setCookie(name, value, expiration) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + expiration * 24 * 60 * 60 * 1000);\r\n    var expires = \"expires=\" + date.toUTCString();\r\n    document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\r\n}\r\n\r\nfunction getCookie(name) {\r\n    var name = name + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\n// Window onload\r\n$(function () {\r\n    // Attempt to load save data\r\n    var saveCookie = getCookie(\"save\");\r\n\r\n    if (saveCookie == \"\") {\r\n        save = starterSave;\r\n    } else {\r\n        save = JSON.parse(saveCookie);\r\n\r\n        // Update old save files\r\n        if (save.version == undefined || save.version != constants.SAVEFILE_VERSION) {\r\n            fixSaveFiles(save);\r\n\r\n            // Save is up to date\r\n            save.version = constants.SAVEFILE_VERSION;\r\n\r\n            (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)('Hello, world!');\r\n        }\r\n\r\n        // Offline progression (75% of estimated online, based off of units per second)\r\n        if (save.settings.OPEnabled) {\r\n            calculateOfflineGain();\r\n        }\r\n\r\n        // Goto last open page\r\n        switchToPage(save.lastOpenPage, 0);\r\n    }\r\n\r\n    (0,_tick_js__WEBPACK_IMPORTED_MODULE_0__.startTicks)();\r\n    (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.initSettings)();\r\n\r\n    function calculateOfflineGain() {\r\n        var now = new Date();\r\n        var difference = (now.getTime() - new Date(save.lastSaved).getTime()) / 1000;\r\n        var offlineGains = Math.floor((difference * save.generation.unitsPerSecond) * constants.OP_PLS_NERF);\r\n\r\n        var offlineGainsText = $(\"#offlineGainsText\");\r\n\r\n        if (difference > 1) {\r\n            navUnitsText.hide();\r\n\r\n            offlineGainsText.text(`You earned ${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(offlineGains)}u while you were away`);\r\n\r\n            offlineGainsText.slideToggle();\r\n\r\n            var anim = setInterval(() => {\r\n                offlineGainsText.slideToggle();\r\n                navUnitsText.slideDown();\r\n                offlineGainsText.text(\"\");\r\n                clearInterval(anim);\r\n            }, 3000);\r\n        }\r\n\r\n        save.currencies.units += offlineGains;\r\n    }\r\n\r\n    function fixSaveFiles(saveData) {\r\n        // fuck your save (for now)\r\n        save = starterSave;\r\n    }\r\n\r\n    // Restore settings from save data\r\n    $(\"#settingAutosaveEnabled\").prop(\"checked\", save.settings.autoSaveEnabled);\r\n\r\n    // Auto-save\r\n    // Autosave every 15 seconds - save to cookies\r\n    // Set interval to 15 seconds (15000 milliseconds)\r\n    if (save.settings.autoSaveInterval === undefined ||\r\n        save.settings.autoSaveInterval < constants.MIN_AUTOSAVE_INTERVAL ||\r\n        save.settings.autoSaveInterval > constants.MAX_AUTOSAVE_INTERVAL) {\r\n        save.settings.autoSaveInterval = 15000;\r\n    }\r\n\r\n    if (save.settings.autoSaveEnabled) {\r\n        // Turn on autosave\r\n        (0,_autosave_js__WEBPACK_IMPORTED_MODULE_2__.setAutosave)();\r\n    }\r\n\r\n    // Navbar code\r\n    homeLink.on(\"click\", function () {\r\n        // Remove active class from all li in nav\r\n        switchToPage(constants.HOME);\r\n        $(this).parent().addClass(\"active\");\r\n    });\r\n\r\n    shopLink.on(\"click\", function () {\r\n        switchToPage(constants.SHOP);\r\n        $(this).parent().addClass(\"active\");\r\n    });\r\n\r\n    settingsLink.on(\"click\", function () {\r\n        switchToPage(constants.SETTINGS);\r\n        $(this).parent().addClass(\"active\");\r\n    });\r\n\r\n    function switchToPage(target, animLength) {\r\n        if (!pageSwitchLocked) {\r\n            if (currentPage != target) {\r\n                // Lock page switch\r\n                pageSwitchLocked = true;\r\n\r\n                if (animLength === undefined) {\r\n                    animLength = 400;\r\n                }\r\n\r\n                // Remove active classes from all links\r\n                $(\"nav\").find(\"li\").removeClass(\"active\");\r\n\r\n                // Hide the current page\r\n                switch (currentPage) {\r\n                    case constants.HOME:\r\n                        homeDiv.slideToggle({\r\n                            complete: function () {\r\n                                doTheShow(animLength);\r\n                            },\r\n                            duration: animLength\r\n                        });\r\n                        break;\r\n                    case constants.SHOP:\r\n                        shopDiv.slideToggle({\r\n                            complete: function () {\r\n                                doTheShow(animLength);\r\n                            },\r\n                            duration: animLength\r\n                        });\r\n                        break;\r\n                    case constants.SETTINGS:\r\n                        settingsDiv.slideToggle({\r\n                            complete: function () {\r\n                                doTheShow(animLength);\r\n                            },\r\n                            duration: animLength\r\n                        });\r\n                        break;\r\n                }\r\n\r\n                function doTheShow(animLength) {\r\n                    if (animLength === undefined) {\r\n                        animLength = 400;\r\n                    }\r\n\r\n                    // Show the target page\r\n                    switch (target) {\r\n                        case constants.HOME:\r\n                            (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)('Switching to Home page.');\r\n                            homeDiv.parent\r\n                            homeDiv.slideToggle({\r\n                                duration: animLength\r\n                            });\r\n                            break;\r\n                        case constants.SHOP:\r\n                            (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)('Switching to Shop page.');\r\n                            shopDiv.slideToggle({\r\n                                duration: animLength\r\n                            });\r\n                            break;\r\n                        case constants.SETTINGS:\r\n                            (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)('Switching to Settings page.');\r\n                            settingsDiv.slideToggle({\r\n                                duration: animLength\r\n                            });\r\n                            break;\r\n                        default:\r\n                            (0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.customConsoleLog)('Switching to Home page.');\r\n                            homeDiv.parent\r\n                            homeDiv.slideDown({\r\n                                duration: 0\r\n                            });\r\n                            target = constants.HOME;\r\n                            save.lastOpenPage = constants.HOME;\r\n                            break;\r\n                    }\r\n\r\n                    // Update the current page variable\r\n                    currentPage = target;\r\n\r\n                    // Unlock page switching\r\n                    pageSwitchLocked = false;\r\n\r\n                    // Autosave for accurate page remembering\r\n                    if (save.settings.autoSaveEnabled) {\r\n                        saveGameData();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Shop code */\r\n\r\n\r\n    if (doDevPrices) {\r\n        $(\"body\").css({\r\n            backgroundColor: \"darkred\"\r\n        });\r\n    }\r\n\r\n    // First Click Doubler\r\n    updateFirstClickDoublerPrice();\r\n    updateFirstClickDoublerTexts();\r\n\r\n    buyClickUpgradeButton.on(\"click\", function () {\r\n        // Check if user can afford\r\n        if (save.currencies.units >= currentFirstClickDoublerPrice) {\r\n            // Subtract cost from units\r\n            save.currencies.units -= currentFirstClickDoublerPrice;\r\n\r\n            // Update doubler count\r\n            save.generation.firstClickDoublers += 1;\r\n\r\n            // Update current price\r\n            updateFirstClickDoublerPrice();\r\n\r\n            // Update texts\r\n            updateFirstClickDoublerTexts();\r\n\r\n            // Double user click power\r\n            save.generation.clickPower *= 2;\r\n\r\n            // Update currency text\r\n            updateCurrencyText();\r\n\r\n            // Update main page button description\r\n            unitButtonDescription.text(`${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.clickPower)} units`);\r\n\r\n            // Show flavor text\r\n            if (firstClickDoublerAnimLock) {\r\n                clearInterval(firstClickDoublerFlavorAnimation);\r\n                firstClickDoublerFlavorText.hide();\r\n            }\r\n\r\n            firstClickDoublerFlavorText.text(`Clicking power is now ${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.clickPower)}u/c!`);\r\n            firstClickDoublerFlavorText.slideDown();\r\n\r\n            firstClickDoublerAnimLock = true;\r\n\r\n            firstClickDoublerFlavorAnimation = setInterval(() => {\r\n                firstClickDoublerFlavorText.slideUp();\r\n                firstClickDoublerAnimLock = false;\r\n                clearInterval(firstClickDoublerFlavorAnimation);\r\n            }, 3000);\r\n        }\r\n    });\r\n\r\n    // Tier 1 Main Generator\r\n    updatetier1UnitGenPrice();\r\n    updatetier1UnitGenTexts();\r\n\r\n    buytier1UnitGenButton.on(\"click\", function () {\r\n        // Check if user can afford\r\n        if (save.currencies.units >= currentTier1UnitGenPrice) {\r\n            // Subtract cost from units\r\n            save.currencies.units -= currentTier1UnitGenPrice;\r\n\r\n            // Update gen count\r\n            save.generation.tier1UnitGenerators += 1;\r\n\r\n            // Update gain per second\r\n            save.generation.tier1UnitGeneratorPower = save.generation.tier1UnitGeneratorPower == 0 ? 1000 : save.generation.tier1UnitGeneratorPower * 2;\r\n            (0,_tick_js__WEBPACK_IMPORTED_MODULE_0__.updateUnitsPerSecond)();\r\n\r\n            // Update current price\r\n            updatetier1UnitGenPrice();\r\n\r\n            // Update texts\r\n            updatetier1UnitGenTexts();\r\n\r\n            // Update currency text\r\n            updateCurrencyText();\r\n\r\n            // Show flavor text\r\n            if (tier1UnitGenAnimLock) {\r\n                clearInterval(tier1UnitGenFlavorAnimation);\r\n                tier1UnitGenIncreaseFlavorText.hide();\r\n            }\r\n\r\n            tier1UnitGenIncreaseFlavorText.text(`Tier 1 Unit Generator power is now ${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.tier1UnitGeneratorPower)}u/s!`);\r\n            tier1UnitGenIncreaseFlavorText.slideDown();\r\n\r\n            tier1UnitGenAnimLock = true;\r\n\r\n            tier1UnitGenFlavorAnimation = setInterval(() => {\r\n                tier1UnitGenIncreaseFlavorText.slideUp();\r\n                tier1UnitGenAnimLock = false;\r\n                clearInterval(tier1UnitGenFlavorAnimation);\r\n            }, 3000);\r\n        }\r\n    });\r\n\r\n    /* Main Currency Button Code */\r\n    var btnClickMe = $(\"#btnClickMe\");\r\n    var unitButtonDescription = $(\"#unitButtonDescription\");\r\n\r\n    if (save.generation.clickPower > 1) {\r\n        unitButtonDescription.text(`${(0,_settings_js__WEBPACK_IMPORTED_MODULE_1__.formatNumberString)(save.generation.clickPower)} units`);\r\n    }\r\n\r\n    updateCurrencyText();\r\n\r\n    btnClickMe.on(\"click\", unitsButtonClicked);\r\n\r\n    function unitsButtonClicked() {\r\n        save.currencies.units += save.generation.clickPower * save.generation.baseProdMult;\r\n        updateCurrencyText();\r\n    }\r\n});\r\n\r\n\n\n//# sourceURL=webpack://i-cal.github.io/./js/index.js?");

/***/ }),

/***/ "./js/settings.js":
/*!************************!*\
  !*** ./js/settings.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customConsoleLog\": () => (/* binding */ customConsoleLog),\n/* harmony export */   \"formatNumberString\": () => (/* binding */ formatNumberString),\n/* harmony export */   \"initSettings\": () => (/* binding */ initSettings)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./js/index.js\");\n/* harmony import */ var _tick_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tick.js */ \"./js/tick.js\");\n/* harmony import */ var _autosave_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./autosave.js */ \"./js/autosave.js\");\n\r\n\r\n\r\n\r\nfunction customConsoleLog(message) {\r\n    if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.consoleLogsEnabled) {\r\n        console.log(message);\r\n    }\r\n}\r\n\r\nfunction formatNumberString(numberToFormat) {\r\n    var formatted;\r\n\r\n    switch (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat) {\r\n        case _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.COMMAS_NUMBER_FORMAT:\r\n            formatted = numberToFormat.toLocaleString();\r\n            break;\r\n        case _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.PERIOD_NUMBER_FORMAT:\r\n            formatted = numberToFormat.toLocaleString(\"de-DE\");\r\n            break;\r\n        case _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.SCIENTIFIC_NUMBER_FORMAT:\r\n            if (numberToFormat >= 1000) {\r\n                formatted = (numberToFormat.toExponential(2)).replace(\"+\", \"\");\r\n            } else {\r\n                formatted = numberToFormat.toLocaleString();\r\n            }\r\n            break;\r\n        default:\r\n            formatted = numberToFormat.toLocaleString();\r\n            break;\r\n    }\r\n\r\n    return formatted;\r\n}\r\n\r\n/* Settings code */\r\nfunction initSettings() {\r\n    // Manual Save\r\n    var settingsSaveButton = $(\"#settingsSaveButton\");\r\n    var settingsManualSaveFinished = $(\"#settingsManualSaveFinished\");\r\n    settingsSaveButton.on(\"click\", function () {\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n        settingsSaveButton.slideToggle();\r\n        settingsManualSaveFinished.slideToggle();\r\n        settingsSaveButton.prop(\"disabled\", true);\r\n        var anim = setInterval(() => {\r\n            settingsManualSaveFinished.slideToggle();\r\n            clearInterval(anim);\r\n            settingsSaveButton.prop(\"disabled\", false);\r\n            settingsSaveButton.slideToggle();\r\n        }, 3000);\r\n    });\r\n\r\n    // Dark Mode\r\n    var settingsDarkModeToggle = $(\"#settingsDarkModeToggle\");\r\n    var settingsDarkModeFlavorText = $(\"#settingsDarkModeFlavorText\");\r\n\r\n    settingsDarkModeToggle.prop(\"checked\", _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.darkModeEnabled);\r\n\r\n    if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.darkModeEnabled) {\r\n        $('body').toggleClass('dark-mode');\r\n        $('nav').toggleClass('bg-light navbar-light navbar-dark bg-dark');\r\n    }\r\n\r\n    settingsDarkModeToggle.on('click', function () {\r\n        $('body').toggleClass('dark-mode');\r\n        $('nav').toggleClass('bg-light navbar-light navbar-dark bg-dark');\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.darkModeEnabled = settingsDarkModeToggle.prop(\"checked\");\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n\r\n        if (!($(this).prop(\"checked\"))) {\r\n            settingsDarkModeFlavorText.text(\"FLASHBANG OUT\");\r\n            settingsDarkModeFlavorText.slideToggle();\r\n\r\n            var settingsDarkModeFlavorTextAnim = setInterval(() => {\r\n                settingsDarkModeFlavorText.slideToggle();\r\n                clearInterval(settingsDarkModeFlavorTextAnim);\r\n            }, 3000);\r\n        }\r\n    });\r\n\r\n    // Number Format\r\n    var settingsNumberFormat = $(\"#settingsNumberFormat\");\r\n\r\n    settingsNumberFormat.val(_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat);\r\n\r\n    settingsNumberFormat.on(\"change\", function () {\r\n        var chosen = $(this).val();\r\n\r\n        switch (chosen) {\r\n            case _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.COMMAS_NUMBER_FORMAT:\r\n                _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat = _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.COMMAS_NUMBER_FORMAT;\r\n                break;\r\n            case _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.PERIOD_NUMBER_FORMAT:\r\n                _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat = _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.PERIOD_NUMBER_FORMAT;\r\n                break;\r\n            case _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.SCIENTIFIC_NUMBER_FORMAT:\r\n                _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat = _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.SCIENTIFIC_NUMBER_FORMAT;\r\n                break;\r\n            default:\r\n                _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat = _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.COMMAS_NUMBER_FORMAT;\r\n                break;\r\n        }\r\n\r\n        customConsoleLog(`Number format changed to ${_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.numberFormat}.`);\r\n\r\n        // Update all shop texts\r\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.firstClickDoublers < _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.MAX_FIRST_CLICK_DOUBLER) {\r\n            (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.updateFirstClickDoublerTexts)();\r\n        }\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.updatetier1UnitGenTexts)();\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n    });\r\n\r\n    // Autosave Enabled\r\n    var settingAutosaveEnabled = $(\"#settingAutosaveEnabled\");\r\n    var autosaveDisabledFlavorText = $(\".autosaveDisabledFlavorText\");\r\n    var settingAutosaveIntervalDiv = $(\"#settingAutosaveIntervalDiv\");\r\n\r\n    if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveEnabled) {\r\n        autosaveDisabledFlavorText.hide();\r\n        settingAutosaveIntervalDiv.show();\r\n    } else {\r\n        autosaveDisabledFlavorText.show();\r\n        settingAutosaveIntervalDiv.hide();\r\n    }\r\n\r\n    settingAutosaveEnabled.on(\"click\", function () {\r\n        customConsoleLog(\"Autosave enabled: \" + settingAutosaveEnabled.prop(\"checked\"));\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveEnabled = settingAutosaveEnabled.prop(\"checked\");\r\n        settingAutosaveInterval.prop(\"disabled\", !_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveEnabled);\r\n        settingAutosaveIntervalDiv.slideToggle();\r\n\r\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveEnabled) {\r\n            (0,_autosave_js__WEBPACK_IMPORTED_MODULE_2__.setAutosave)();\r\n            autosaveDisabledFlavorText.slideToggle();\r\n        } else {\r\n            (0,_autosave_js__WEBPACK_IMPORTED_MODULE_2__.stopAutosave)()\r\n            autosaveDisabledFlavorText.slideToggle();\r\n        }\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)(); // To save the new setting\r\n    });\r\n\r\n    // Autosave Interval\r\n    var settingAutosaveInterval = $(\"#settingAutosaveInterval\");\r\n    var settingAutosaveIntervalCurrentValue = $(\"#settingAutosaveIntervalCurrentValue\");\r\n\r\n    settingAutosaveInterval.prop(\"disabled\", !_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveEnabled);\r\n    settingAutosaveInterval.val(_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveInterval / 1000);\r\n    settingAutosaveIntervalCurrentValue.text((_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveInterval / 1000) + \" second\" + (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveInterval / 1000 != 1 ? \"s\" : \"\"));\r\n\r\n    settingAutosaveInterval.on(\"input\", function () {\r\n        var value = $(this).val();\r\n        settingAutosaveIntervalCurrentValue.text(value + \" second\" + (value != 1 ? \"s\" : \"\"));\r\n    });\r\n\r\n    settingAutosaveInterval.on(\"change\", function () {\r\n        var value = $(this).val();\r\n\r\n        // Update save data\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.autoSaveInterval = value * 1000;\r\n\r\n        // Clear old interval\r\n        (0,_autosave_js__WEBPACK_IMPORTED_MODULE_2__.stopAutosave)()\r\n\r\n        // Set new interval\r\n        ;(0,_autosave_js__WEBPACK_IMPORTED_MODULE_2__.setAutosave)()\r\n\r\n        customConsoleLog(\"Autosave interval has been changed to: \" + value + \" second\" + (value != 1 ? \"s\" : \"\"));\r\n    });\r\n\r\n    // Custom tick rate\r\n    var settingCustomTickRateAllowed = $(\"#settingCustomTickRateAllowed\");\r\n    var settingCustomTickRate = $(\"#settingCustomTickRate\");\r\n    var saveNewCustomTickrateButton = $(\"#saveNewCustomTickrateButton\");\r\n    var settingCustomTickRateFlavorText = $(\"#settingCustomTickRateFlavorText\");\r\n\r\n    settingCustomTickRateAllowed.prop(\"checked\", _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.customTickRateAllowed);\r\n\r\n    if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.customTickRateAllowed) {\r\n        settingCustomTickRate.show();\r\n        saveNewCustomTickrateButton.show();\r\n    }\r\n\r\n    settingCustomTickRate.prop(\"disabled\", !_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.customTickRateAllowed);\r\n    settingCustomTickRate.val(_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate);\r\n\r\n    saveNewCustomTickrateButton.prop(\"disabled\", !_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.customTickRateAllowed);\r\n\r\n    settingCustomTickRateAllowed.on(\"click\", function () {\r\n        settingCustomTickRate.prop(\"disabled\", false);\r\n        settingCustomTickRate.slideToggle();\r\n\r\n        saveNewCustomTickrateButton.prop(\"disabled\", false);\r\n        saveNewCustomTickrateButton.slideToggle();\r\n\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.customTickRateAllowed = settingCustomTickRateAllowed.prop(\"checked\");\r\n\r\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.customTickRateAllowed == false) {\r\n            _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate = 50;\r\n            settingCustomTickRate.val(_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate);\r\n            (0,_tick_js__WEBPACK_IMPORTED_MODULE_1__.resetTickInterval)();\r\n            customConsoleLog(\"Custom tick rate disabled.\");\r\n        } else {\r\n            customConsoleLog(\"Custom tick rate enabled.\");\r\n        }\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n    });\r\n\r\n    saveNewCustomTickrateButton.on(\"click\", function () {\r\n        var newTickRate = settingCustomTickRate.val();\r\n\r\n        settingCustomTickRateFlavorText.text(\"Tick rate updated.\");\r\n        settingCustomTickRateFlavorText.slideToggle();\r\n        saveNewCustomTickrateButton.prop(\"disabled\", true);\r\n\r\n        var anim = setInterval(() => {\r\n            settingCustomTickRateFlavorText.slideToggle();\r\n            saveNewCustomTickrateButton.prop(\"disabled\", false);\r\n            clearInterval(anim);\r\n        }, 3000);\r\n\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate = newTickRate;\r\n\r\n        (0,_tick_js__WEBPACK_IMPORTED_MODULE_1__.resetTickInterval)();\r\n\r\n        customConsoleLog(`Tick rate has been changed to ${newTickRate}ms.`);\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n    });\r\n\r\n    // Offline Progression\r\n    var settingOfflineProgressionEnabled = $(\"#settingOfflineProgressionEnabled\");\r\n    var settingOfflineProgressionEnabledFlavorText = $(\"#settingOfflineProgressionEnabledFlavorText\");\r\n    var settingOfflineProgressionDesc = $(\"#settingOfflineProgressionDesc\");\r\n\r\n    settingOfflineProgressionDesc.text(`Get ${_index_js__WEBPACK_IMPORTED_MODULE_0__.constants.OP_PLS_NERF * 100}% of your online earnings while offline`);\r\n\r\n    settingOfflineProgressionEnabled.prop(\"checked\", _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.OPEnabled);\r\n\r\n    settingOfflineProgressionEnabled.on(\"click\", function () {\r\n        var op = $(this).prop(\"checked\");\r\n\r\n        if (op) {\r\n            settingOfflineProgressionEnabledFlavorText.text(\"hehe ;)\");\r\n            settingOfflineProgressionEnabledFlavorText.slideToggle();\r\n\r\n            var offlineAnim = setInterval(() => {\r\n                settingOfflineProgressionEnabledFlavorText.slideToggle();\r\n                clearInterval(offlineAnim);\r\n            }, 3000);\r\n        }\r\n\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.OPEnabled = op;\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n    });\r\n\r\n    // Console Logs\r\n    var settingConsoleLogs = $(\"#settingConsoleLogs\");\r\n    var settingConsoleLogsFlavorText = $(\"#settingConsoleLogsFlavorText\");\r\n\r\n    settingConsoleLogs.prop(\"checked\", _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.consoleLogsEnabled);\r\n\r\n    settingConsoleLogs.on(\"click\", function () {\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.consoleLogsEnabled = $(this).prop(\"checked\");\r\n\r\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.consoleLogsEnabled) {\r\n            settingConsoleLogsFlavorText.text(\"Console logs enabled!\");\r\n            settingConsoleLogsFlavorText.slideToggle();\r\n\r\n            var settingConsoleLogsFlavorTextAnim = setInterval(() => {\r\n                settingConsoleLogsFlavorText.slideToggle();\r\n                clearInterval(settingConsoleLogsFlavorTextAnim);\r\n            }, 3000);\r\n\r\n            customConsoleLog(\"Console logs enabled.\");\r\n        }\r\n\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.saveGameData)();\r\n    });\r\n\r\n    // Reset save code\r\n    var settingsResetSaveInitialDiv = $(\"#settingsResetSaveInitialDiv\");\r\n    var settingsResetSaveButton = $(\"#settingsResetSaveButton\");\r\n    var settingsResetSaveConfirmDiv = $(\"#settingsResetSaveConfirmDiv\");\r\n    var settingsResetConfirm = $(\"#settingsResetConfirm\");\r\n    var settingsResetNevermind = $(\"#settingsResetNevermind\");\r\n\r\n    settingsResetSaveButton.on(\"click\", function () {\r\n        settingsResetSaveInitialDiv.slideToggle();\r\n        settingsResetSaveConfirmDiv.slideToggle();\r\n    });\r\n\r\n    settingsResetNevermind.on(\"click\", function () {\r\n        settingsResetSaveInitialDiv.slideToggle();\r\n        settingsResetSaveConfirmDiv.slideToggle();\r\n    });\r\n\r\n    settingsResetConfirm.on(\"click\", function () {\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.setCookie)(\"save\", \"\", -1);\r\n        location.reload();\r\n    });\r\n}\n\n//# sourceURL=webpack://i-cal.github.io/./js/settings.js?");

/***/ }),

/***/ "./js/tick.js":
/*!********************!*\
  !*** ./js/tick.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resetTickInterval\": () => (/* binding */ resetTickInterval),\n/* harmony export */   \"startTicks\": () => (/* binding */ startTicks),\n/* harmony export */   \"updateUnitsPerSecond\": () => (/* binding */ updateUnitsPerSecond)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./js/index.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.js */ \"./js/settings.js\");\n// Imports\r\n// Variables from index\r\n\r\n// Functions from index\r\n\r\n\r\n\r\n\r\nvar tickInterval;\r\n\r\nfunction startTicks() {\r\n    /* DO TICKS N SHIT */\r\n    tickInterval = setInterval(() => {\r\n        doTick();\r\n    }, _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate);\r\n}\r\n\r\nfunction doTick() {\r\n    // Calculate idle gain\r\n    if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.unitsPerSecond > 0) {\r\n        var gain = calculateIdleGain();\r\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.save.currencies.units += gain;\r\n\r\n        // Update currency text\r\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.updateCurrencyText)();\r\n    }\r\n\r\n    // Update shop buttons if page is open\r\n    if (_index_js__WEBPACK_IMPORTED_MODULE_0__.currentPage == _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.SHOP) {\r\n        // If unbought first click doublers\r\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.firstClickDoublers < _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.MAX_FIRST_CLICK_DOUBLER) {\r\n            (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.updateFirstClickDoublerTexts)();\r\n        }\r\n\r\n        // If unbought Tier 1 Main Generators\r\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.tier1UnitGenerators < _index_js__WEBPACK_IMPORTED_MODULE_0__.constants.MAX_TIER_1_UNIT_GENS) {\r\n            (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.updatetier1UnitGenTexts)();\r\n        }\r\n    }\r\n}\r\n\r\nfunction resetTickInterval() {\r\n    clearInterval(tickInterval);\r\n\r\n    tickInterval = setInterval(() => {\r\n        doTick();\r\n    }, _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate);\r\n}\r\n\r\nfunction updateUnitsPerSecond() {\r\n    _index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.unitsPerSecond = _index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.tier1UnitGeneratorPower; // add future generator powers to this\r\n}\r\n\r\nfunction calculateIdleGain() {\r\n    var gainPerMillisecond = _index_js__WEBPACK_IMPORTED_MODULE_0__.save.generation.unitsPerSecond / 1000;\r\n    var gainPerTick = gainPerMillisecond * _index_js__WEBPACK_IMPORTED_MODULE_0__.save.settings.tickRate;\r\n    return gainPerTick;\r\n}\n\n//# sourceURL=webpack://i-cal.github.io/./js/tick.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./js/index.js");
/******/ 	
/******/ })()
;